
dumbledore.exe:     file format elf64-x86-64


Disassembly of section .init:

0000000000400728 <_init>:
  400728:	48 83 ec 08          	sub    $0x8,%rsp
  40072c:	48 8b 05 c5 18 20 00 	mov    0x2018c5(%rip),%rax        # 601ff8 <_DYNAMIC+0x1d0>
  400733:	48 85 c0             	test   %rax,%rax
  400736:	74 05                	je     40073d <_init+0x15>
  400738:	e8 13 01 00 00       	callq  400850 <fwrite@plt+0x10>
  40073d:	48 83 c4 08          	add    $0x8,%rsp
  400741:	c3                   	retq   

Disassembly of section .plt:

0000000000400750 <lfind@plt-0x10>:
  400750:	ff 35 b2 18 20 00    	pushq  0x2018b2(%rip)        # 602008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400756:	ff 25 b4 18 20 00    	jmpq   *0x2018b4(%rip)        # 602010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40075c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400760 <lfind@plt>:
  400760:	ff 25 b2 18 20 00    	jmpq   *0x2018b2(%rip)        # 602018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400766:	68 00 00 00 00       	pushq  $0x0
  40076b:	e9 e0 ff ff ff       	jmpq   400750 <_init+0x28>

0000000000400770 <abort@plt>:
  400770:	ff 25 aa 18 20 00    	jmpq   *0x2018aa(%rip)        # 602020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400776:	68 01 00 00 00       	pushq  $0x1
  40077b:	e9 d0 ff ff ff       	jmpq   400750 <_init+0x28>

0000000000400780 <fmemopen@plt>:
  400780:	ff 25 a2 18 20 00    	jmpq   *0x2018a2(%rip)        # 602028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400786:	68 02 00 00 00       	pushq  $0x2
  40078b:	e9 c0 ff ff ff       	jmpq   400750 <_init+0x28>

0000000000400790 <strcpy@plt>:
  400790:	ff 25 9a 18 20 00    	jmpq   *0x20189a(%rip)        # 602030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400796:	68 03 00 00 00       	pushq  $0x3
  40079b:	e9 b0 ff ff ff       	jmpq   400750 <_init+0x28>

00000000004007a0 <strchr@plt>:
  4007a0:	ff 25 92 18 20 00    	jmpq   *0x201892(%rip)        # 602038 <_GLOBAL_OFFSET_TABLE_+0x38>
  4007a6:	68 04 00 00 00       	pushq  $0x4
  4007ab:	e9 a0 ff ff ff       	jmpq   400750 <_init+0x28>

00000000004007b0 <printf@plt>:
  4007b0:	ff 25 8a 18 20 00    	jmpq   *0x20188a(%rip)        # 602040 <_GLOBAL_OFFSET_TABLE_+0x40>
  4007b6:	68 05 00 00 00       	pushq  $0x5
  4007bb:	e9 90 ff ff ff       	jmpq   400750 <_init+0x28>

00000000004007c0 <__strdup@plt>:
  4007c0:	ff 25 82 18 20 00    	jmpq   *0x201882(%rip)        # 602048 <_GLOBAL_OFFSET_TABLE_+0x48>
  4007c6:	68 06 00 00 00       	pushq  $0x6
  4007cb:	e9 80 ff ff ff       	jmpq   400750 <_init+0x28>

00000000004007d0 <__libc_start_main@plt>:
  4007d0:	ff 25 7a 18 20 00    	jmpq   *0x20187a(%rip)        # 602050 <_GLOBAL_OFFSET_TABLE_+0x50>
  4007d6:	68 07 00 00 00       	pushq  $0x7
  4007db:	e9 70 ff ff ff       	jmpq   400750 <_init+0x28>

00000000004007e0 <fgets@plt>:
  4007e0:	ff 25 72 18 20 00    	jmpq   *0x201872(%rip)        # 602058 <_GLOBAL_OFFSET_TABLE_+0x58>
  4007e6:	68 08 00 00 00       	pushq  $0x8
  4007eb:	e9 60 ff ff ff       	jmpq   400750 <_init+0x28>

00000000004007f0 <strcmp@plt>:
  4007f0:	ff 25 6a 18 20 00    	jmpq   *0x20186a(%rip)        # 602060 <_GLOBAL_OFFSET_TABLE_+0x60>
  4007f6:	68 09 00 00 00       	pushq  $0x9
  4007fb:	e9 50 ff ff ff       	jmpq   400750 <_init+0x28>

0000000000400800 <gets@plt>:
  400800:	ff 25 62 18 20 00    	jmpq   *0x201862(%rip)        # 602068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400806:	68 0a 00 00 00       	pushq  $0xa
  40080b:	e9 40 ff ff ff       	jmpq   400750 <_init+0x28>

0000000000400810 <realloc@plt>:
  400810:	ff 25 5a 18 20 00    	jmpq   *0x20185a(%rip)        # 602070 <_GLOBAL_OFFSET_TABLE_+0x70>
  400816:	68 0b 00 00 00       	pushq  $0xb
  40081b:	e9 30 ff ff ff       	jmpq   400750 <_init+0x28>

0000000000400820 <__strcpy_chk@plt>:
  400820:	ff 25 52 18 20 00    	jmpq   *0x201852(%rip)        # 602078 <_GLOBAL_OFFSET_TABLE_+0x78>
  400826:	68 0c 00 00 00       	pushq  $0xc
  40082b:	e9 20 ff ff ff       	jmpq   400750 <_init+0x28>

0000000000400830 <exit@plt>:
  400830:	ff 25 4a 18 20 00    	jmpq   *0x20184a(%rip)        # 602080 <_GLOBAL_OFFSET_TABLE_+0x80>
  400836:	68 0d 00 00 00       	pushq  $0xd
  40083b:	e9 10 ff ff ff       	jmpq   400750 <_init+0x28>

0000000000400840 <fwrite@plt>:
  400840:	ff 25 42 18 20 00    	jmpq   *0x201842(%rip)        # 602088 <_GLOBAL_OFFSET_TABLE_+0x88>
  400846:	68 0e 00 00 00       	pushq  $0xe
  40084b:	e9 00 ff ff ff       	jmpq   400750 <_init+0x28>

Disassembly of section .plt.got:

0000000000400850 <.plt.got>:
  400850:	ff 25 a2 17 20 00    	jmpq   *0x2017a2(%rip)        # 601ff8 <_DYNAMIC+0x1d0>
  400856:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400860 <main>:
  400860:	48 83 ec 08          	sub    $0x8,%rsp
  400864:	be aa 00 00 00       	mov    $0xaa,%esi
  400869:	ba e4 0c 40 00       	mov    $0x400ce4,%edx
  40086e:	bf c0 20 60 00       	mov    $0x6020c0,%edi
  400873:	e8 08 ff ff ff       	callq  400780 <fmemopen@plt>
  400878:	48 89 c7             	mov    %rax,%rdi
  40087b:	e8 80 01 00 00       	callq  400a00 <LoadGrades>
  400880:	bf e6 0c 40 00       	mov    $0x400ce6,%edi
  400885:	48 89 05 04 19 20 00 	mov    %rax,0x201904(%rip)        # 602190 <grades>
  40088c:	48 89 15 05 19 20 00 	mov    %rdx,0x201905(%rip)        # 602198 <grades+0x8>
  400893:	e8 58 03 00 00       	callq  400bf0 <GetGradeFromInput>
  400898:	48 85 c0             	test   %rax,%rax
  40089b:	75 0a                	jne    4008a7 <main+0x47>
  40089d:	b8 01 00 00 00       	mov    $0x1,%eax
  4008a2:	48 83 c4 08          	add    $0x8,%rsp
  4008a6:	c3                   	retq   
  4008a7:	48 8b 38             	mov    (%rax),%rdi
  4008aa:	48 8d 70 08          	lea    0x8(%rax),%rsi
  4008ae:	e8 7d 03 00 00       	callq  400c30 <PrintGradeAndExit>
  4008b3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4008ba:	00 00 00 
  4008bd:	0f 1f 00             	nopl   (%rax)

00000000004008c0 <set_fast_math>:
  4008c0:	0f ae 5c 24 fc       	stmxcsr -0x4(%rsp)
  4008c5:	81 4c 24 fc 40 80 00 	orl    $0x8040,-0x4(%rsp)
  4008cc:	00 
  4008cd:	0f ae 54 24 fc       	ldmxcsr -0x4(%rsp)
  4008d2:	c3                   	retq   
  4008d3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4008da:	00 00 00 
  4008dd:	0f 1f 00             	nopl   (%rax)

00000000004008e0 <_start>:
  4008e0:	31 ed                	xor    %ebp,%ebp
  4008e2:	49 89 d1             	mov    %rdx,%r9
  4008e5:	5e                   	pop    %rsi
  4008e6:	48 89 e2             	mov    %rsp,%rdx
  4008e9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4008ed:	50                   	push   %rax
  4008ee:	54                   	push   %rsp
  4008ef:	49 c7 c0 c0 0c 40 00 	mov    $0x400cc0,%r8
  4008f6:	48 c7 c1 50 0c 40 00 	mov    $0x400c50,%rcx
  4008fd:	48 c7 c7 60 08 40 00 	mov    $0x400860,%rdi
  400904:	e8 c7 fe ff ff       	callq  4007d0 <__libc_start_main@plt>
  400909:	f4                   	hlt    
  40090a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400910 <deregister_tm_clones>:
  400910:	b8 77 21 60 00       	mov    $0x602177,%eax
  400915:	55                   	push   %rbp
  400916:	48 2d 70 21 60 00    	sub    $0x602170,%rax
  40091c:	48 83 f8 0e          	cmp    $0xe,%rax
  400920:	48 89 e5             	mov    %rsp,%rbp
  400923:	76 1b                	jbe    400940 <deregister_tm_clones+0x30>
  400925:	b8 00 00 00 00       	mov    $0x0,%eax
  40092a:	48 85 c0             	test   %rax,%rax
  40092d:	74 11                	je     400940 <deregister_tm_clones+0x30>
  40092f:	5d                   	pop    %rbp
  400930:	bf 70 21 60 00       	mov    $0x602170,%edi
  400935:	ff e0                	jmpq   *%rax
  400937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40093e:	00 00 
  400940:	5d                   	pop    %rbp
  400941:	c3                   	retq   
  400942:	0f 1f 40 00          	nopl   0x0(%rax)
  400946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40094d:	00 00 00 

0000000000400950 <register_tm_clones>:
  400950:	be 70 21 60 00       	mov    $0x602170,%esi
  400955:	55                   	push   %rbp
  400956:	48 81 ee 70 21 60 00 	sub    $0x602170,%rsi
  40095d:	48 c1 fe 03          	sar    $0x3,%rsi
  400961:	48 89 e5             	mov    %rsp,%rbp
  400964:	48 89 f0             	mov    %rsi,%rax
  400967:	48 c1 e8 3f          	shr    $0x3f,%rax
  40096b:	48 01 c6             	add    %rax,%rsi
  40096e:	48 d1 fe             	sar    %rsi
  400971:	74 15                	je     400988 <register_tm_clones+0x38>
  400973:	b8 00 00 00 00       	mov    $0x0,%eax
  400978:	48 85 c0             	test   %rax,%rax
  40097b:	74 0b                	je     400988 <register_tm_clones+0x38>
  40097d:	5d                   	pop    %rbp
  40097e:	bf 70 21 60 00       	mov    $0x602170,%edi
  400983:	ff e0                	jmpq   *%rax
  400985:	0f 1f 00             	nopl   (%rax)
  400988:	5d                   	pop    %rbp
  400989:	c3                   	retq   
  40098a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400990 <__do_global_dtors_aux>:
  400990:	80 3d f1 17 20 00 00 	cmpb   $0x0,0x2017f1(%rip)        # 602188 <completed.7585>
  400997:	75 11                	jne    4009aa <__do_global_dtors_aux+0x1a>
  400999:	55                   	push   %rbp
  40099a:	48 89 e5             	mov    %rsp,%rbp
  40099d:	e8 6e ff ff ff       	callq  400910 <deregister_tm_clones>
  4009a2:	5d                   	pop    %rbp
  4009a3:	c6 05 de 17 20 00 01 	movb   $0x1,0x2017de(%rip)        # 602188 <completed.7585>
  4009aa:	f3 c3                	repz retq 
  4009ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004009b0 <frame_dummy>:
  4009b0:	bf 20 1e 60 00       	mov    $0x601e20,%edi
  4009b5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4009b9:	75 05                	jne    4009c0 <frame_dummy+0x10>
  4009bb:	eb 93                	jmp    400950 <register_tm_clones>
  4009bd:	0f 1f 00             	nopl   (%rax)
  4009c0:	b8 00 00 00 00       	mov    $0x0,%eax
  4009c5:	48 85 c0             	test   %rax,%rax
  4009c8:	74 f1                	je     4009bb <frame_dummy+0xb>
  4009ca:	55                   	push   %rbp
  4009cb:	48 89 e5             	mov    %rsp,%rbp
  4009ce:	ff d0                	callq  *%rax
  4009d0:	5d                   	pop    %rbp
  4009d1:	e9 7a ff ff ff       	jmpq   400950 <register_tm_clones>
  4009d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009dd:	00 00 00 

00000000004009e0 <alphaCompareKey>:
  4009e0:	48 8b 36             	mov    (%rsi),%rsi
  4009e3:	e9 08 fe ff ff       	jmpq   4007f0 <strcmp@plt>
  4009e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4009ef:	00 

00000000004009f0 <alphaCompare>:
  4009f0:	48 8b 36             	mov    (%rsi),%rsi
  4009f3:	48 8b 3f             	mov    (%rdi),%rdi
  4009f6:	e9 f5 fd ff ff       	jmpq   4007f0 <strcmp@plt>
  4009fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400a00 <LoadGrades>:
  400a00:	41 56                	push   %r14
  400a02:	41 55                	push   %r13
  400a04:	49 89 fd             	mov    %rdi,%r13
  400a07:	41 54                	push   %r12
  400a09:	55                   	push   %rbp
  400a0a:	45 31 e4             	xor    %r12d,%r12d
  400a0d:	53                   	push   %rbx
  400a0e:	31 ed                	xor    %ebp,%ebp
  400a10:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  400a17:	e9 95 00 00 00       	jmpq   400ab1 <LoadGrades+0xb1>
  400a1c:	0f 1f 40 00          	nopl   0x0(%rax)
  400a20:	80 7c 24 10 00       	cmpb   $0x0,0x10(%rsp)
  400a25:	0f 84 a1 00 00 00    	je     400acc <LoadGrades+0xcc>
  400a2b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  400a30:	be 2c 00 00 00       	mov    $0x2c,%esi
  400a35:	e8 66 fd ff ff       	callq  4007a0 <strchr@plt>
  400a3a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  400a3f:	48 89 c3             	mov    %rax,%rbx
  400a42:	be 0a 00 00 00       	mov    $0xa,%esi
  400a47:	e8 54 fd ff ff       	callq  4007a0 <strchr@plt>
  400a4c:	48 85 db             	test   %rbx,%rbx
  400a4f:	49 89 c6             	mov    %rax,%r14
  400a52:	0f 84 8a 00 00 00    	je     400ae2 <LoadGrades+0xe2>
  400a58:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  400a5d:	c6 03 00             	movb   $0x0,(%rbx)
  400a60:	49 83 c4 01          	add    $0x1,%r12
  400a64:	e8 57 fd ff ff       	callq  4007c0 <__strdup@plt>
  400a69:	48 8d 73 01          	lea    0x1(%rbx),%rsi
  400a6d:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
  400a72:	4c 89 e3             	mov    %r12,%rbx
  400a75:	ba 08 00 00 00       	mov    $0x8,%edx
  400a7a:	48 c1 e3 04          	shl    $0x4,%rbx
  400a7e:	41 c6 06 00          	movb   $0x0,(%r14)
  400a82:	48 89 04 24          	mov    %rax,(%rsp)
  400a86:	e8 95 fd ff ff       	callq  400820 <__strcpy_chk@plt>
  400a8b:	48 89 ef             	mov    %rbp,%rdi
  400a8e:	48 89 de             	mov    %rbx,%rsi
  400a91:	e8 7a fd ff ff       	callq  400810 <realloc@plt>
  400a96:	48 85 c0             	test   %rax,%rax
  400a99:	48 89 c5             	mov    %rax,%rbp
  400a9c:	74 44                	je     400ae2 <LoadGrades+0xe2>
  400a9e:	48 8b 04 24          	mov    (%rsp),%rax
  400aa2:	48 89 44 1d f0       	mov    %rax,-0x10(%rbp,%rbx,1)
  400aa7:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  400aac:	48 89 44 1d f8       	mov    %rax,-0x8(%rbp,%rbx,1)
  400ab1:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
  400ab6:	4c 89 ea             	mov    %r13,%rdx
  400ab9:	be 80 00 00 00       	mov    $0x80,%esi
  400abe:	e8 1d fd ff ff       	callq  4007e0 <fgets@plt>
  400ac3:	48 85 c0             	test   %rax,%rax
  400ac6:	0f 85 54 ff ff ff    	jne    400a20 <LoadGrades+0x20>
  400acc:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
  400ad3:	48 89 e8             	mov    %rbp,%rax
  400ad6:	4c 89 e2             	mov    %r12,%rdx
  400ad9:	5b                   	pop    %rbx
  400ada:	5d                   	pop    %rbp
  400adb:	41 5c                	pop    %r12
  400add:	41 5d                	pop    %r13
  400adf:	41 5e                	pop    %r14
  400ae1:	c3                   	retq   
  400ae2:	48 8b 0d 97 16 20 00 	mov    0x201697(%rip),%rcx        # 602180 <stderr@@GLIBC_2.2.5>
  400ae9:	ba 0f 00 00 00       	mov    $0xf,%edx
  400aee:	be 01 00 00 00       	mov    $0x1,%esi
  400af3:	bf d4 0c 40 00       	mov    $0x400cd4,%edi
  400af8:	e8 43 fd ff ff       	callq  400840 <fwrite@plt>
  400afd:	e8 6e fc ff ff       	callq  400770 <abort@plt>
  400b02:	0f 1f 40 00          	nopl   0x0(%rax)
  400b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b0d:	00 00 00 

0000000000400b10 <InsertGrade>:
  400b10:	48 8b 05 81 16 20 00 	mov    0x201681(%rip),%rax        # 602198 <grades+0x8>
  400b17:	41 54                	push   %r12
  400b19:	49 89 fc             	mov    %rdi,%r12
  400b1c:	55                   	push   %rbp
  400b1d:	48 8b 3d 6c 16 20 00 	mov    0x20166c(%rip),%rdi        # 602190 <grades>
  400b24:	48 89 f5             	mov    %rsi,%rbp
  400b27:	53                   	push   %rbx
  400b28:	48 8d 70 01          	lea    0x1(%rax),%rsi
  400b2c:	48 c1 e6 04          	shl    $0x4,%rsi
  400b30:	e8 db fc ff ff       	callq  400810 <realloc@plt>
  400b35:	48 8b 15 5c 16 20 00 	mov    0x20165c(%rip),%rdx        # 602198 <grades+0x8>
  400b3c:	4c 89 e7             	mov    %r12,%rdi
  400b3f:	48 89 05 4a 16 20 00 	mov    %rax,0x20164a(%rip)        # 602190 <grades>
  400b46:	48 c1 e2 04          	shl    $0x4,%rdx
  400b4a:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
  400b4e:	e8 6d fc ff ff       	callq  4007c0 <__strdup@plt>
  400b53:	48 89 03             	mov    %rax,(%rbx)
  400b56:	48 8b 05 3b 16 20 00 	mov    0x20163b(%rip),%rax        # 602198 <grades+0x8>
  400b5d:	48 89 ee             	mov    %rbp,%rsi
  400b60:	48 8b 1d 29 16 20 00 	mov    0x201629(%rip),%rbx        # 602190 <grades>
  400b67:	48 c1 e0 04          	shl    $0x4,%rax
  400b6b:	48 8d 7c 03 08       	lea    0x8(%rbx,%rax,1),%rdi
  400b70:	e8 1b fc ff ff       	callq  400790 <strcpy@plt>
  400b75:	48 8b 05 1c 16 20 00 	mov    0x20161c(%rip),%rax        # 602198 <grades+0x8>
  400b7c:	48 83 c0 01          	add    $0x1,%rax
  400b80:	48 89 05 11 16 20 00 	mov    %rax,0x201611(%rip)        # 602198 <grades+0x8>
  400b87:	48 c1 e0 04          	shl    $0x4,%rax
  400b8b:	48 8d 44 03 f0       	lea    -0x10(%rbx,%rax,1),%rax
  400b90:	5b                   	pop    %rbx
  400b91:	5d                   	pop    %rbp
  400b92:	41 5c                	pop    %r12
  400b94:	c3                   	retq   
  400b95:	90                   	nop
  400b96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400b9d:	00 00 00 

0000000000400ba0 <FindGrade>:
  400ba0:	55                   	push   %rbp
  400ba1:	53                   	push   %rbx
  400ba2:	48 89 f5             	mov    %rsi,%rbp
  400ba5:	41 b8 e0 09 40 00    	mov    $0x4009e0,%r8d
  400bab:	b9 10 00 00 00       	mov    $0x10,%ecx
  400bb0:	ba 98 21 60 00       	mov    $0x602198,%edx
  400bb5:	48 83 ec 08          	sub    $0x8,%rsp
  400bb9:	48 8b 35 d0 15 20 00 	mov    0x2015d0(%rip),%rsi        # 602190 <grades>
  400bc0:	48 89 fb             	mov    %rdi,%rbx
  400bc3:	e8 98 fb ff ff       	callq  400760 <lfind@plt>
  400bc8:	48 85 c0             	test   %rax,%rax
  400bcb:	74 0b                	je     400bd8 <FindGrade+0x38>
  400bcd:	48 83 c4 08          	add    $0x8,%rsp
  400bd1:	5b                   	pop    %rbx
  400bd2:	5d                   	pop    %rbp
  400bd3:	c3                   	retq   
  400bd4:	0f 1f 40 00          	nopl   0x0(%rax)
  400bd8:	48 83 c4 08          	add    $0x8,%rsp
  400bdc:	48 89 ee             	mov    %rbp,%rsi
  400bdf:	48 89 df             	mov    %rbx,%rdi
  400be2:	5b                   	pop    %rbx
  400be3:	5d                   	pop    %rbp
  400be4:	e9 27 ff ff ff       	jmpq   400b10 <InsertGrade>
  400be9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400bf0 <GetGradeFromInput>:
  400bf0:	53                   	push   %rbx
  400bf1:	48 89 fb             	mov    %rdi,%rbx
  400bf4:	48 81 ec 00 20 00 00 	sub    $0x2000,%rsp
  400bfb:	48 89 e7             	mov    %rsp,%rdi
  400bfe:	e8 fd fb ff ff       	callq  400800 <gets@plt>
  400c03:	48 85 c0             	test   %rax,%rax
  400c06:	74 18                	je     400c20 <GetGradeFromInput+0x30>
  400c08:	48 89 de             	mov    %rbx,%rsi
  400c0b:	48 89 e7             	mov    %rsp,%rdi
  400c0e:	e8 8d ff ff ff       	callq  400ba0 <FindGrade>
  400c13:	48 81 c4 00 20 00 00 	add    $0x2000,%rsp
  400c1a:	5b                   	pop    %rbx
  400c1b:	c3                   	retq   
  400c1c:	0f 1f 40 00          	nopl   0x0(%rax)
  400c20:	31 c0                	xor    %eax,%eax
  400c22:	eb ef                	jmp    400c13 <GetGradeFromInput+0x23>
  400c24:	66 90                	xchg   %ax,%ax
  400c26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400c2d:	00 00 00 

0000000000400c30 <PrintGradeAndExit>:
  400c30:	48 89 f2             	mov    %rsi,%rdx
  400c33:	48 83 ec 08          	sub    $0x8,%rsp
  400c37:	48 89 fe             	mov    %rdi,%rsi
  400c3a:	31 c0                	xor    %eax,%eax
  400c3c:	bf e8 0c 40 00       	mov    $0x400ce8,%edi
  400c41:	e8 6a fb ff ff       	callq  4007b0 <printf@plt>
  400c46:	31 ff                	xor    %edi,%edi
  400c48:	e8 e3 fb ff ff       	callq  400830 <exit@plt>
  400c4d:	0f 1f 00             	nopl   (%rax)

0000000000400c50 <__libc_csu_init>:
  400c50:	41 57                	push   %r15
  400c52:	41 56                	push   %r14
  400c54:	41 89 ff             	mov    %edi,%r15d
  400c57:	41 55                	push   %r13
  400c59:	41 54                	push   %r12
  400c5b:	4c 8d 25 a6 11 20 00 	lea    0x2011a6(%rip),%r12        # 601e08 <__frame_dummy_init_array_entry>
  400c62:	55                   	push   %rbp
  400c63:	48 8d 2d ae 11 20 00 	lea    0x2011ae(%rip),%rbp        # 601e18 <__init_array_end>
  400c6a:	53                   	push   %rbx
  400c6b:	49 89 f6             	mov    %rsi,%r14
  400c6e:	49 89 d5             	mov    %rdx,%r13
  400c71:	4c 29 e5             	sub    %r12,%rbp
  400c74:	48 83 ec 08          	sub    $0x8,%rsp
  400c78:	48 c1 fd 03          	sar    $0x3,%rbp
  400c7c:	e8 a7 fa ff ff       	callq  400728 <_init>
  400c81:	48 85 ed             	test   %rbp,%rbp
  400c84:	74 20                	je     400ca6 <__libc_csu_init+0x56>
  400c86:	31 db                	xor    %ebx,%ebx
  400c88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400c8f:	00 
  400c90:	4c 89 ea             	mov    %r13,%rdx
  400c93:	4c 89 f6             	mov    %r14,%rsi
  400c96:	44 89 ff             	mov    %r15d,%edi
  400c99:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  400c9d:	48 83 c3 01          	add    $0x1,%rbx
  400ca1:	48 39 eb             	cmp    %rbp,%rbx
  400ca4:	75 ea                	jne    400c90 <__libc_csu_init+0x40>
  400ca6:	48 83 c4 08          	add    $0x8,%rsp
  400caa:	5b                   	pop    %rbx
  400cab:	5d                   	pop    %rbp
  400cac:	41 5c                	pop    %r12
  400cae:	41 5d                	pop    %r13
  400cb0:	41 5e                	pop    %r14
  400cb2:	41 5f                	pop    %r15
  400cb4:	c3                   	retq   
  400cb5:	90                   	nop
  400cb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400cbd:	00 00 00 

0000000000400cc0 <__libc_csu_fini>:
  400cc0:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400cc4 <_fini>:
  400cc4:	48 83 ec 08          	sub    $0x8,%rsp
  400cc8:	48 83 c4 08          	add    $0x8,%rsp
  400ccc:	c3                   	retq   
